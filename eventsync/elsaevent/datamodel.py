#autogenerated by sqlautocode

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation

DeclarativeBase = declarative_base()
metadata = DeclarativeBase.metadata

categories_events = Table('categories_events', metadata,
    Column('event_id', INTEGER(), ForeignKey("events.id"), nullable=False),
    Column('category_id', INTEGER(), ForeignKey("categories.id"), nullable=False),
)

class Category(DeclarativeBase):
    __tablename__ = 'categories'

    __table_args__ = {}

    #column definitions
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    name = Column('name', VARCHAR(length=100))

    #relation definitions


class Emailtemplate(DeclarativeBase):
    __tablename__ = 'emailtemplates'

    __table_args__ = {}

    #column definitions
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    notification_id = Column('notification_id', INTEGER(), nullable=False)
    password = Column('password', VARCHAR(length=50), nullable=False)
    server = Column('server', VARCHAR(length=100), nullable=False)
    subject = Column('subject', VARCHAR(length=255), nullable=False)
    text = Column('text', String(), nullable=False)
    username = Column('username', VARCHAR(length=50), nullable=False)

    #relation definitions


class EmailtemplatesRecipient(DeclarativeBase):
    __tablename__ = 'emailtemplates_recipients'

    __table_args__ = {}

    #column definitions
    emailtemplate_id = Column('emailtemplate_id', INTEGER(), primary_key=True, nullable=False)
    recipient_id = Column('recipient_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Event(DeclarativeBase):
    """
    changed
    """
    __tablename__ = 'events'

    __table_args__ = {}

    #column definitions
    address = Column('address', String())
    alias = Column('alias', VARCHAR(length=255), nullable=False)
    body = Column('body', TEXT())
    created = Column('created', DATETIME())
    enddate = Column('enddate', DATE())
    endtime = Column('endtime', TIME())
    group_id = Column('group_id', INTEGER(), ForeignKey("groups.id"), nullable=False)
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    location = Column('location', VARCHAR(length=255), nullable=False)
    modified = Column('modified', DATETIME())
    remarks = Column('remarks', TEXT())
    startdate = Column('startdate', DATE(), nullable=False)
    starttime = Column('starttime', TIME())
    status_id = Column('status_id', INTEGER(), ForeignKey("statuses.id"), nullable=False)
    timezone = Column('timezone', VARCHAR(length=50), nullable=False)
    title = Column('title', VARCHAR(length=255), nullable=False)
    url = Column('url', VARCHAR(length=255))
    user_id = Column('user_id', INTEGER(), ForeignKey("users.id"), nullable=False)

    #relation definitions
    status = relation("Status")
    user = relation("User")
    group = relation("Group")
    categories = relation('Category', secondary=categories_events, backref="events")

class EventsNotification(DeclarativeBase):
    __tablename__ = 'events_notifications'

    __table_args__ = {}

    #column definitions
    event_id = Column('event_id', INTEGER(), nullable=False)
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    intervall = Column('intervall', VARCHAR(length=20))
    notification_id = Column('notification_id', INTEGER(), nullable=False)

    #relation definitions


class EventsUser(DeclarativeBase):
    __tablename__ = 'events_users'

    __table_args__ = {}

    #column definitions
    event_id = Column('event_id', INTEGER(), primary_key=True, nullable=False)
    user_id = Column('user_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Group(DeclarativeBase):
    __tablename__ = 'groups'

    __table_args__ = {}

    #column definitions
    ansprechpartner = Column('ansprechpartner', VARCHAR(length=255))
    created = Column('created', DATETIME())
    email = Column('email', VARCHAR(length=255))
    homepage = Column('homepage', VARCHAR(length=255), nullable=False)
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    kurzalias = Column('kurzalias', VARCHAR(length=10), nullable=False)
    lft = Column('lft', INTEGER())
    modified = Column('modified', DATETIME())
    name = Column('name', VARCHAR(length=100), nullable=False)
    ort_default = Column('ort_default', VARCHAR(length=255))
    parent_id = Column('parent_id', INTEGER())
    phone = Column('phone', VARCHAR(length=255))
    rght = Column('rght', INTEGER())
    wikipage = Column('wikipage', VARCHAR(length=255), nullable=False)

    #relation definitions


class Notification(DeclarativeBase):
    __tablename__ = 'notifications'

    __table_args__ = {}

    #column definitions
    created = Column('created', DATETIME())
    group_id = Column('group_id', INTEGER(), nullable=False)
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    modified = Column('modified', DATETIME())
    name = Column('name', VARCHAR(length=100), nullable=False)
    notificationtype_id = Column('notificationtype_id', VARCHAR(length=100), nullable=False)

    #relation definitions


class Notificationtype(DeclarativeBase):
    __tablename__ = 'notificationtypes'

    __table_args__ = {}

    #column definitions
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    name = Column('name', VARCHAR(length=40))

    #relation definitions


class Recipient(DeclarativeBase):
    __tablename__ = 'recipients'

    __table_args__ = {}

    #column definitions
    adresse = Column('adresse', VARCHAR(length=80), nullable=False)
    id = Column('id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Status(DeclarativeBase):
    __tablename__ = 'statuses'

    __table_args__ = {}

    #column definitions
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    name = Column('name', VARCHAR(length=50), nullable=False)

    #relation definitions


class Twittertemplate(DeclarativeBase):
    __tablename__ = 'twittertemplates'

    __table_args__ = {}

    #column definitions
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    notification_id = Column('notification_id', INTEGER(), nullable=False)
    password = Column('password', VARCHAR(length=50), nullable=False)
    text = Column('text', String(), nullable=False)
    username = Column('username', VARCHAR(length=50), nullable=False)

    #relation definitions


class User(DeclarativeBase):
    __tablename__ = 'users'

    __table_args__ = {}

    #column definitions
    created = Column('created', DATETIME())
    email = Column('email', VARCHAR(length=255))
    group_id = Column('group_id', INTEGER(), nullable=False)
    id = Column('id', INTEGER(), primary_key=True, nullable=False)
    member_no = Column('member_no', INTEGER())
    modified = Column('modified', DATETIME())
    password = Column('password', CHAR(length=40), nullable=False)
    real_name = Column('real_name', CHAR(length=100), nullable=False)
    role = Column('role', Enum('admin', 'user'), nullable=False)
    timezone = Column('timezone', VARCHAR(length=50), nullable=False)
    username = Column('username', VARCHAR(length=255), nullable=False)
    